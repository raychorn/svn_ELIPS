<?xml version="1.0" encoding="utf-8"?>
<mob:ScreenStackApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
							layout="absolute" 
							navBarStyleName="styleBlack"
							xmlns:mob="openplug.elips.controls.*" 
							xmlns:scr="openplug.elips.controls.screenClasses.*" 
							creationComplete="init()" 
							xmlns:local="*"
							backgroundColor="#474747" backgroundAlpha="0.25"
							advertisementPosition="top" xmlns:controls="controls.*">
	<mx:Style source="GenericStyle.css"/>
	<mx:Style>
		Label {
			color: #ffffff;
		}
		
		.UserEntryField {
			backgroundColor: #474747;
			backgroundAlpha: 0.25;
		}

		.UserEntryRequiredField {
			color: #ff0000;
			fontWeight: bold;
		}

		.titleSubText
		{
			font-size: 14;
			color: white;
			fontWeight: normal;
		}
		
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import com.utils.RESTAPI;
			import com.utils.StringUtils;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			import openplug.elips.controls.Alert;
			import openplug.elips.events.ItemTouchTapEvent;
			import openplug.elips.services.SystemAPI;
			
			[Embed(source="header.gif")]
			[Bindable]
			public var imgHeaderCls:Class;
			
			private var _isLoggedIn:Boolean = false;
			
			[Bindable]
			private var _product_title:String = 'Social Media Hax v1.0';
			
			[Bindable]
			private var _product_copyright:String = 'Copyright 2010 Vyper Logix Corp.,\nhttp://www.VyperLogix.Com and http://RayCHorn.Com,\nAll Rights Reserved\nexcept where specifically stated otherwise.';
			
			[Bindable]
			private var buttonSize:int = 25;
			
			private const _required_fields_statement:String = 'Fields marked with a "*" are "Required".';
			
			private var slideTimer:Timer;
			private var slideCurrent:int = 0;

			private function init():void {
				slideTimer = new Timer(3000, 0);
				slideTimer.addEventListener(TimerEvent.TIMER, slideTimeout);

				if ( ((this._isLoggedIn is Boolean) == false) || (this._isLoggedIn == false) ) {
					goToScreen('Login');
				}
				setFocus();
			}

			private function slideTimeout(evt:TimerEvent):void {
				slideShowIterate();
			}

			private function slideShowIterate():void {
				
				if (slideCurrent < (slideCollection.length - 1)) {
					slideCurrent ++;
				} else {
					slideCurrent = 0;
				}
				
//				if (slideShow != null) {
//					slideShow.source = slideCollection[slideCurrent].data;
//					fadeIn.play([slideShow]);
//				}
			}

			private function onWidgetSelect(evt:ItemTouchTapEvent):void {
				if (evt.item.screen_id is String) {
					goToScreen(evt.item.screen_id);
				} else {
					Alert.show(evt.item.data, 'INFO --> onWidgetSelect');
				}
			}
			
			private function onTouchTap_btn_DoLogin(event:TouchEvent):void {
				var _this:* = this;
				var username:String = this.field_UserName_login.txtUserName.text;
				var isUserNameValid:Boolean = (username is String) && (username.length >= 3) && (StringUtils.isUserName(username));
				var password:String = this.field_Password_login.txtPassword.text;
				var isPasswordValid:Boolean = (password is String) && (password.length >= 8) && (StringUtils.isPassword(password));
				if ( (isUserNameValid) && (isPasswordValid) ) {
					var endpoint:String = RESTAPI.rest_login_endpoint + StringUtils.urlEncode(username) + '/' + StringUtils.urlEncode(password);
					trace('onTouchTap_btn_DoLogin().1 --> endpoint='+endpoint);
					// BEGIN: Simulation code - comment this out for production...
					Alert.show(username+'\n\n'+password+'\n\n'+endpoint, 'INFO --> onTouchTap_btn_DoLogin().1',Alert.YES|Alert.NO,null,function (event:CloseEvent):void {
						if (event.detail == Alert.YES) {
							_this._isLoggedIn = true;
							_this.goBack('MainScreen');
						}
					});
					// END!  Simulation code - comment this out for production...
				} else if (!isUserNameValid) {
					Alert.show('The User Name you entered is not valid and must be corrected before you can login.', 'WARNING');
				} else if (!isPasswordValid) {
					Alert.show('The Password you entered is not valid and must be corrected before you can login.', 'WARNING');
				}
			}
			
			private function onTouchTap_btn_DoRegister(event:TouchEvent):void {
				var username:String = this.field_UserName_register.txtUserName.text;
				var isUserNameValid:Boolean = (username is String) && (username.length >= 3) && (StringUtils.isUserName(username));
				var password:String = this.field_Password_register.txtPassword.text;
				var isPasswordValid:Boolean = (password is String) && (password.length >= 8) && (StringUtils.isPassword(password));
				var password2:String = this.field_RepeatPassword_register.txtPassword.text;
				isPasswordValid = ( (isPasswordValid) && (password == password2) );
				var emailAddress:String = this.field_EmailAddress_register.txtEmailAddress.text;
				var isEmailAddressValid:Boolean = (emailAddress is String) && (emailAddress.length >= 3) && (StringUtils.isEmailAddress(emailAddress));
				if ( (isUserNameValid) && (isPasswordValid) && (isEmailAddressValid) ) {
					var endpoint:String = RESTAPI.rest_register_endpoint + StringUtils.urlEncode(username) + '/' + StringUtils.urlEncode(password) + '/' + StringUtils.urlEncode(emailAddress);
					trace('onTouchTap_btn_DoRegister().1 --> endpoint='+endpoint);
					Alert.show(username+'\n\n'+password+'\n\n'+emailAddress+'\n\n'+endpoint, 'INFO --> onTouchTap_btn_DoRegister().1');
				} else if (!isUserNameValid) {
					Alert.show('The User Name you entered is not valid and must be corrected before you can register.', 'WARNING');
				} else if (!isPasswordValid) {
					Alert.show('The Password you entered is not valid and must be corrected before you can register.', 'WARNING');
				} else if (!isEmailAddressValid) {
					Alert.show('The Email Address you entered is not valid and must be corrected before you can register.', 'WARNING');
				}
			}
			
			private function onTouchTap_btn_ShowRegister(event:TouchEvent):void {
				goToScreen('Register');
			}
			
			private function onTouchTap_btn_ShowLogin(event:TouchEvent):void {
				this.goBack('Login');
			}
			
			private function onTextEntryComplete(e:Event):void {
				txtEntry.text = SystemAPI.textEntryString;
				SystemAPI.dispatcher.removeEventListener("textEntry", onTextEntryComplete);
			}
			
			private function stop_activity_animation():void {
				//this.activity.stop();
				//this.activity.visible = this.activity.includeInLayout = false;
			}
			
			private function start_activity_animation():void {
				//this.activity.start();
				//this.activity.visible = this.activity.includeInLayout = true;
			}
			
			private function onComplete_imgLoader(event:*):void {
				this.stop_activity_animation();
			}
			
			private function onIOError_imgLoader(event:*):void {
				this.stop_activity_animation();
			}

			protected function Base_showHandler(event:FlexEvent):void {
				if ( ((this._isLoggedIn is Boolean) == false) || (this._isLoggedIn == false) ) {
					goToScreen('Login');
				}
			}
			
			private function get login_form_has_required_fields():Boolean {
				return this.field_UserName_login.is_required || this.field_Password_login.is_required;
			}

		]]>
	</mx:Script>

	<!-- SlideShow Item Collection-->
	<mx:ArrayCollection id="slideCollection">
		<mx:Object data="911.gif"/>
		<mx:Object data="458.gif"/>
		<mx:Object data="rapide.gif"/>
	</mx:ArrayCollection>

	<!-- Custom Animation -->
	<mx:Fade id="fadeIn" duration="1000" alphaFrom="0.0" alphaTo="1.0"/>
	<mx:Sequence id="animateScaleXUpDown" >
		<mx:AnimateProperty property="x" fromValue="40" toValue="140" duration="200" />
		<mx:AnimateProperty property="x" fromValue="140" toValue="40" duration="600" />
	</mx:Sequence>

	<!-- Main Menu Item Collection-->
	<mx:ArrayCollection id="widgetsCollection">
		<mx:Object id="firstObj" label="Feed #1" screen_id="Text" data="http://blah-blah-blah.com/rss/"/>
		<mx:Object label="Feed #2" data="http://feed2.com" screen_id="Image"/>
		<mx:Object label="Feed #3" data="http://feed3.com"/>
		<mx:Object label="Feed #4" data="http://feed4.com"/>
		<mx:Object label="Feed #5" data="http://feed5.com"/>
	</mx:ArrayCollection>
	
	<!-- Android Menu Item Collection-->
	<mx:ArrayCollection id="menu1">
		<scr:MenuItem actionClick="Alert.show(this._product_copyright, 'About '+this._product_title);" label="About" icon="@Embed('info.png')"/>
	</mx:ArrayCollection>
	
	<!-- SoftKey Bottom Bar -->
	<scr:SoftKeyBarDescriptor id="backSoftKey" leftAction="Back" leftActionClick="goBack()"/>

	<!-- iPhone Top Navigation Bar -->
	<scr:NavigationBarDescriptor title="{this._product_title}" id="baseNavBar" styleName="styleBlue"/>
	<!-- Main Screen -->
	
	<mob:ScreenView id="MainScreen" softKeyBarStatus="none" navBarDescriptor="{this.baseNavBar}" menuProvider="{this.menu1}" clipContent="true" verticalScrollPolicy="auto" show="Base_showHandler(event)">
		<mob:TabNavigator id="mainTab" width="100%" height="100%">
			<mx:VBox width="100%" height="100%" horizontalGap="0" verticalGap="0" label="Main" icon="@Embed('main.png')">
				<mx:HBox excludeFromPlatform="iPhone OS 3.0" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" id="Header" width="100%" height="{height/10}" backgroundImage="{this.imgHeaderCls}">
					<mx:Label width="10%" text=" " fontSize="17" color="white"/>
					<mx:Label textAlign="center" width="80%" id="title" text="{this._product_title}" fontSize="17" color="white"/>
					<mx:Label width="10%" text="x" fontSize="20" color="white" touchTap="exit()"/>
				</mx:HBox>
				<mob:List id="widgetsList" showSelection="true" backgroundColor="blue" backgroundAlpha="0.25"
						  dataProvider="{widgetsCollection}" rowHeight="{height/10}" itemRenderer="WidgetsListRenderer" width="100%" height="100%" itemTouchTap="onWidgetSelect(event)"/>
			</mx:VBox>
			<mx:VBox id="helpBox" width="100%" height="100%" horizontalGap="0" verticalGap="0" horizontalAlign="center" label="Info" icon="@Embed('info.png')" backgroundColor="white">
				<mx:HBox id="helpTitle" excludeFromPlatform="iPhone OS 3.0" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" width="100%" height="{height/10}" backgroundImage="header.gif">
					<mx:Label width="10%" text=" " fontSize="17" color="white"/>
					<mx:Label text="Info" width="80%" textAlign="center" fontSize="17" color="white"/>
					<mx:Label width="10%" text="x" fontSize="20" color="white" touchTap="exit()"/>
				</mx:HBox>
				<mx:Canvas height="100%" width="100%" clipContent="true" verticalScrollPolicy="auto">
					<mx:VBox width="100%" height="100%" horizontalGap="0" verticalGap="0" horizontalAlign="center">
						<mx:HBox  width="95%" horizontalAlign="center" verticalAlign="middle" horizontalGap="5" verticalGap="5">
							<mx:Text fontWeight="bold" text="{this._product_title} for"/> 
							<mx:Image source="platform.png"/>
						</mx:HBox>	    		
						<mx:Text width="95%" textAlign="center" text="{'\n'+this._product_title+' was written by Ray C Horn and published by Vyper Logix Corp. for the Android Market.\n\n'+this._product_copyright}"/>
					</mx:VBox>
				</mx:Canvas>
			</mx:VBox>
		</mob:TabNavigator>
	</mob:ScreenView>

	<!-- Text controls Screen -->
	<mob:ScreenView id="Text" softKeyBarDescriptor="{backSoftKey}" clipContent="true" verticalScrollPolicy="auto">
		<mob:navBarDescriptor>
			<scr:NavigationBarDescriptor title="Text Fields"/>
		</mob:navBarDescriptor>
		<mx:VBox width="100%" height="100%">
			<mx:Canvas width="100%">
				<mx:Label x="5" y="0" text="&lt;mx:Label&gt;" fontWeight="bold"/>
				<mx:Label id="txtLabel" x="40" y="20" text="single line non-editable text" width="{width-65}"/>
			</mx:Canvas>
			<mx:Canvas width="100%">
				<mx:Label x="5" y="0" text="&lt;mx:Text&gt;" fontWeight="bold"/>
				<mx:Canvas verticalScrollPolicy="auto" clipContent="true" x="40" y="20" width="{width-65}">
					<mx:Text id="txtText" width="100%" text="multi-line text that wraps when the text is too long"/>
				</mx:Canvas>
			</mx:Canvas>
			
			<mx:Canvas width="100%">
				<mx:Label x="5" y="0" text="&lt;mob:TextInput&gt;" fontWeight="bold"/>
				<mx:VBox width="100%" x="40" y="20">
					<local:CommentText text="When tapping the textFields below, a keyboard will appear allowing you to modify the text. The modification of the 1st text field will affect the mx:Label above. The second one works as a password entry." />
					<mob:TextInput id="txtInput" width="{width-65}" height="30" text="" textChanged="txtLabel.text=txtInput.text"/>
					<mob:TextInput id="txtInputPW" width="{width-65}" height="30" text="Password" displayAsPassword="true" />
				</mx:VBox>
			</mx:Canvas>
			
			<mx:Canvas width="100%">
				<mx:Label x="5" y="0" text="&lt;mob:TextArea&gt;" fontWeight="bold"/>
				<mx:VBox width="100%" x="40" y="20">
					<local:CommentText text="When tapping the textField below, a keyboard will appear allowing you to modify the text. The text modification will affect the mx:Text above. Tap the 'Change Style' button to see the text colored in red highlighted in yellow." />
					<mob:TextArea id="txtArea" width="{width-65}" height="100" text=" ALICE was beginning to get very tired of sitting by her sister on the bank and of having nothing to do: once or twice she had peeped into the book her sister was reading, but it had no pictures or conversations in it, 'and what is the use of a book,' thought Alice, 'without pictures or conversations?'" textChanged="txtText.text=txtArea.text" autoCapitalization="None" autoCorrection="false"/>
					<mx:Button width="150" height="{buttonSize}" label="Change style" touchTap="txtArea.styleName='txtStyle'"/>
					<mx:Canvas id="txtAreaNativeOptions" visible="false" width="150" height="25">
						<mx:Button x="0" width="50" height="{buttonSize}" label="OK" touchTap="txtArea.validateText()"/>
						<mx:Button x="50" width="50" height="{buttonSize}" label="Cap" touchTap="txtArea.autoCapitalization='Sentences'"/>
						<mx:Button x="100" width="50" height="{buttonSize}" label="Cor" touchTap="txtArea.autoCorrection=true"/>
					</mx:Canvas>
				</mx:VBox>
			</mx:Canvas>
			
			<mx:Canvas width="100%">
				<mx:Label x="5" y="0" text="SystemAPI.getEntryString" fontWeight="bold"/>
				<mx:VBox width="100%" x="40" y="20">
					<local:CommentText text="Tap the 'Show Text Entry' button to invoke a textField and a keyboard. You can then edit your text. By tapping 'OK' button, you should see the text your entered below the 'Show Text Entry' button. By tapping 'Cancel' button, you cancel your modifications." />
					<mx:Button height="{buttonSize}" label="Show Text Entry" touchTap="SystemAPI.dispatcher.addEventListener('textEntry', onTextEntryComplete); SystemAPI.getEntryString('Text Entry:', false)"/>
					<mx:Label id="txtEntry" text="Text Entry:"/>
				</mx:VBox>
			</mx:Canvas>
			
			<mx:Canvas width="100%" excludeFromPlatform="iPhone OS 3.0">
				<mx:Label x="5" y="0" text="flash.events.KeyboardEvent" fontWeight="bold"/>
				<mx:VBox width="100%" x="40" y="20">
					<local:CommentText text="Press a Key and its ID will be displayed in the label below." />
					<mx:Label id="txtKey" text="Press a Key"/>
				</mx:VBox>
			</mx:Canvas>
			<mx:Canvas width="100%" height="5"/>
		</mx:VBox>
	</mob:ScreenView>
	
	<!-- Login Screen -->
	<mob:ScreenView id="Login" softKeyBarDescriptor="{backSoftKey}" clipContent="true" verticalScrollPolicy="auto">
		<mob:navBarDescriptor>
			<scr:NavigationBarDescriptor title="Login to the Cloud"/>
		</mob:navBarDescriptor>
		<mx:VBox width="100%" height="100%">
			<mx:Text width="95%" textAlign="center" styleName="titleText" text="{this._product_title}"/>
			<mx:Canvas width="100%" height="5"/>
			<mx:Text width="95%" textAlign="center" styleName="titleSubText" text="{'You must Login or Register to continue...'}"/>
			<mx:Canvas width="100%" height="5"/>
			<controls:UserNameTextField id="field_UserName_login" styleName="UserEntryField" is_required="true"/>
			<controls:PasswordTextField id="field_Password_login" label="Password: " styleName="UserEntryField" is_required="true"/>
			<mx:Canvas width="100%" height="5"/>
			<mx:Label id="required_fields" text="{this._required_fields_statement}" paddingLeft="{this.width-this.required_fields.width}" styleName="UserEntryRequiredField" visible="{this.login_form_has_required_fields}" includeInLayout="{this.login_form_has_required_fields}"/>
			<mx:Canvas width="100%" height="5"/>
			<controls:LoginButton id="button_Login_login" buttonSize="{buttonSize}" handler_touchTap="{this.onTouchTap_btn_DoLogin}"/>
			<mx:Canvas width="100%" height="5"/>
			<controls:RegisterButton id="button_Register_login" buttonSize="{buttonSize}" handler_touchTap="{this.onTouchTap_btn_ShowRegister}"/>
			<mx:Canvas width="100%" height="5"/>
			<mx:Text width="95%" textAlign="center" text="{'\n\n'+this._product_copyright}"/>
		</mx:VBox>
	</mob:ScreenView>
	
	<!-- Register Screen -->
	<mob:ScreenView id="Register" softKeyBarDescriptor="{backSoftKey}" clipContent="true" verticalScrollPolicy="auto">
		<mob:navBarDescriptor>
			<scr:NavigationBarDescriptor title="Register to use the Cloud"/>
		</mob:navBarDescriptor>
		<mx:VBox width="100%" height="100%">
			<mx:Text width="95%" textAlign="center" styleName="titleText" text="{this._product_title}"/>
			<mx:Canvas width="100%" height="5"/>
			<mx:Text width="95%" textAlign="center" fontWeight="bold" text="{'Get Registered...'}"/>
			<mx:Canvas width="100%" height="5"/>
			<controls:UserNameTextField id="field_UserName_register"/>
			<controls:PasswordTextField id="field_Password_register" label="Password: "/>
			<controls:PasswordTextField id="field_RepeatPassword_register" label="Repeat Password: "/>
			<controls:EmailAddressTextField id="field_EmailAddress_register"/>
			<controls:RegisterButton id="button_Register_register" buttonSize="{buttonSize}" handler_touchTap="{this.onTouchTap_btn_DoRegister}"/>
			<mx:Canvas width="100%" height="5"/>
			<controls:LoginButton id="button_Login_register" buttonSize="{buttonSize}" handler_touchTap="{this.onTouchTap_btn_ShowLogin}"/>
			<mx:Canvas width="100%" height="5"/>
			<mx:Text width="95%" textAlign="center" text="{'\n\n'+this._product_copyright}"/>
		</mx:VBox>
	</mob:ScreenView>

</mob:ScreenStackApplication>